input {
	file {
		path => "/usr/share/logstash/logs/publish/error.log"
		start_position=>"beginning"
		type=>"error.log"
	}	
	file {
		path => "/usr/share/logstash/logs/author/error.log"
		start_position=>"beginning"
		type=>"error.log"
	}
		file {
		path => "/usr/share/logstash/logs/publish/access.log"
		start_position=>"beginning"
		type=>"access.log"
	}	
	file {
		path => "/usr/share/logstash/logs/author/access.log"
		start_position=>"beginning"
		type=>"access.log"
	}	
	file {
		path => "/usr/share/logstash/logs/publish/request.log"
		start_position=>"beginning"
		type=>"request.log"
	}	
	file {
		path => "/usr/share/logstash/logs/author/request.log"
		start_position=>"beginning"
		type=>"request.log"
	}	file {
		path => "/usr/share/logstash/logs/publish/stdout.log"
		start_position=>"beginning"
		type=>"stdout.log"
	}	
	file {
		path => "/usr/share/logstash/logs/author/stdout.log"
		start_position=>"beginning"
		type=>"stdout.log"
	}	file {
		path => "/usr/share/logstash/logs/publish/stderr.log"
		start_position=>"beginning"
		type=>"stderr.log"
	}	
	file {
		path => "/usr/share/logstash/logs/author/stderr.log"
		start_position=>"beginning"
		type=>"stderr.log"
	}

	tcp {
		port => 5000
	}
}

## Add your filters / logstash plugins configuration here

filter {
  if [path] =~ "error" {
    mutate { replace => { "type" => "error.log" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

filter {
  if [path] =~ "access" {
    mutate { replace => { "type" => "access.log" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

filter {
  if [path] =~ "request" {
    mutate { replace => { "type" => "request" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

filter {
  if [path] =~ "std" {
    mutate { replace => { "type" => "std" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

filter {
  if [path] =~ "author" {
    mutate { replace => { "host" => "author" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

filter {
  if [path] =~ "publish" {
	  mutate { replace => { "host" => "publish" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}



output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => "changeme"
		ecs_compatibility => disabled
	}
}
